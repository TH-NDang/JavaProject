name: Java CI with Maven

on:
  push:
    branches: [ main, master, develop ]
  pull_request:
    branches: [ main, master, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Set up Docker
      uses: docker/setup-buildx-action@v2

    - name: Start SQL Server
      run: |
        docker run -e "ACCEPT_EULA=Y" -e "SA_PASSWORD=Password@sa" \
          -e "MSSQL_PID=Express" -e "MSSQL_MEMORY_LIMIT_MB=1024" \
          -p 1433:1433 --name sql1 \
          -d mcr.microsoft.com/mssql/server:2019-latest

    - name: Wait for SQL Server
      run: |
        for i in {1..30}; do
          if docker exec sql1 /opt/mssql-tools/bin/sqlcmd \
            -S localhost -U sa -P 'Password@sa' \
            -Q 'SELECT 1' &>/dev/null; then
            echo "SQL Server is ready"
            exit 0
          fi
          echo "Waiting for SQL Server... ($i/30)"
          sleep 2
        done
        echo "SQL Server did not become ready in time"
        exit 1

    - name: Set up JDK 21
      uses: actions/setup-java@v3
      with:
        java-version: '21'
        distribution: 'temurin'
        cache: maven

    - name: Cache Maven packages
      uses: actions/cache@v3
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2

    - name: Build and Test Backend
      working-directory: ./koi-pond-backend
      env:
        SPRING_DATASOURCE_URL: jdbc:sqlserver://localhost:1433;databaseName=master;encrypt=true;trustServerCertificate=true
        SPRING_DATASOURCE_USERNAME: sa
        SPRING_DATASOURCE_PASSWORD: Password@sa
      run: mvn clean test -Dtest=UserServiceTest
      timeout-minutes: 5

    - name: Upload Test Results
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: test-results
        path: koi-pond-backend/target/surefire-reports/

    - name: Publish Test Report
      if: always()
      uses: dorny/test-reporter@v1
      with:
        name: Test Results
        path: "koi-pond-backend/target/**/TEST-*.xml"
        reporter: java-junit
        fail-on-error: false
