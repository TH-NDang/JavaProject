# .github/workflows/ci.yml
name: Java CI with Maven and Selenium

on:
  push:
    branches: [ main, master, develop ]
  pull_request:
    branches: [ main, master, develop ]

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      # SQL Server service container
      sqlserver:
        image: mcr.microsoft.com/mssql/server:latest
        env:
          ACCEPT_EULA: Y
          SA_PASSWORD: Password@sa
          MSSQL_PID: Express
        ports:
          - 1433:1433
        options: >-
          --health-cmd "/opt/mssql-tools/bin/sqlcmd -S localhost -U sa -P Password@sa -Q 'SELECT 1' || exit 1"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - uses: actions/checkout@v3

    - name: Set up JDK 21
      uses: actions/setup-java@v3
      with:
        java-version: '21'
        distribution: 'temurin'
        cache: maven

    - name: Cache Maven packages
      uses: actions/cache@v3
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json

    - name: Install Frontend Dependencies
      working-directory: ./frontend
      run: |
        npm ci
        npm run build

    - name: Start Frontend
      working-directory: ./frontend
      run: |
        npm start &
        echo "Waiting for frontend to start..."
        sleep 30

    - name: Set up Chrome Driver
      uses: browser-actions/setup-chrome@latest
      with:
        chrome-version: stable

    - name: Set up Chrome for Testing
      uses: nanasess/setup-chromedriver@master

    - name: Start Chrome Driver
      run: |
        export DISPLAY=:99
        chromedriver --url-base=/wd/hub &
        sudo Xvfb -ac :99 -screen 0 1280x1024x24 > /dev/null 2>&1 &

    - name: Build and Test Backend
      working-directory: ./koi-pond-backend
      env:
        SPRING_DATASOURCE_URL: jdbc:sqlserver://localhost:1433;databaseName=master;encrypt=true;trustServerCertificate=true
        SPRING_DATASOURCE_USERNAME: sa
        SPRING_DATASOURCE_PASSWORD: Password@sa
      run: |
        mvn clean verify

    - name: Upload Test Results
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: test-results
        path: koi-pond-backend/target/surefire-reports/

    - name: Publish Test Report
      if: always()
      uses: dorny/test-reporter@v1
      with:
        name: Test Results
        path: koi-pond-backend/target/surefire-reports/*.xml
        reporter: java-junit
